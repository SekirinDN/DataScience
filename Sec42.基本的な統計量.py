# 基本的な統計量
#  基本的な統計量として、平均値、期待値、分散、標準偏差を解説します

# ・平均値とは？
#  ・「平均値」は、複数の値の合計値を、値の数で割って求めます。
#  ・以下は、 n 個の値の平均値を求める式です。
#     μ=x1+x2+⋯+xnn=1n∑k=1nxk ？？？
#  ・例えば、Aさんの体重が60kg、Bさんは40kg、Cさんは55kg、Dさんが45kgであれば、
#    4人の平均体重は以下の通りに計算できます。
#    (60+40+55+44)/4 = 50(kg)
#  ・このような平均値は、複数の値からなるデータの特徴を表す値の1つです。
#  ・平均値は、NumPyのaverage( )関数（もしくはmean( )関数）により計算することができます。
print("-" * 50)
import numpy as np
x = np.array([55, 45, 60, 40])  # 平均をとるデータ
print(np.average(x))


# ・期待値とは？
#  ・試行の結果、以下の値のうちいずれかが得られるものとします。
#     x1,x2,⋯,xn
#  ・それぞれの値は、以下の確率で得られるものとします。
#     P1,P2,⋯,Pn
#  ・このとき、値と確率の積の総和として表される値 E は、「期待値」と呼ばれます。
#     E=∑k=1nPkxk ？？？
#  ・期待値とは、「得られる値の見込み」と表現することができます。
#  ・例えば、宝くじにより80%の確率で10円が、15%の確率で100円が、
#    5%の確率で1000円が当たる場合、この宝くじの期待値は以下の通りです。
#     E = 0.8×10 + 0.15×100 + 0.05×1000 = 73
#  ・この宝くじの期待値は73円であり、くじを引くことで73円程度の収益が見込まれることになります。
#  ・宝くじを購入を判断する際の目安になりますね。
#  ・期待値は、以下のように確率と値の積の総和で計算することができます。
print("-" * 50)
import numpy as np
p = np.array([0.8, 0.15, 0.05])  # 確率
x = np.array([10, 100, 1000])  # 値
print(np.sum(p*x))  # 期待値


# ・平均値と期待値の関係
#  ・値が重複する場合、平均値は以下のような式で表されます。
#  ・（式 1）
#     1n∑k=1mnkxk ？？？
#  ・この式で、 n は値の総数、 nk は xk の個数で、 m は値の種類の数です。
#  ・以下のように、 nk の総和は n となります。
#     ∑k=1mnk=n ？？？
#  ・ここで、（式 1）を以下のように変形します。
#     ∑k=1mnknxk ？？？
#  ・nkn はその値が選択される確率なので、 Pk とおきます。これにより、上記の式は以下の形になります。
#     ∑k=1mPkxk ？？？
#  ・期待値の式と全く同じになりました。
#  ・実は、平均値と期待値は同じ概念を表しています。


# ・分散とは？
#  ・「分散」は値のばらつき具合を表す指標で、以下の V で表されます。
#     V=1n∑k=1n(xk−μ)2 ？？？
#  ・この式において、 n は値の総数、 xk は値、 μ は平均値です。
#  ・平均値との差を2乗し、平均をとっています。
#  ・例えば、Aさんの体重が60kg、Bさんは40kg、Cさんは55kg、Dさんが45kgであれば、分散は以下ように計算されます。
#     μ = (60+40+55+45)/4 = 50(kg)
#     V = (60−50)^2+(40−50)^2+(55−50)^2+(45−50)^2) / 4 = 62.5(kg2)
#  ・次に、Aさんの体重が48kg、Bさんは49kg、Cさんは52kg、Dさんが51kgの場合の分散を計算します。
#  ・先程と比べて、値のばらつきが小さくなっています。
#     μ = (48+49+52+51) / 4 = 50(kg)
#     V = ((48−50)^2+(49−50)^2+(52−50)^2+(51−50)^2) / 4 = 2.5(kg2)
#  ・こちらの場合の方が、分散が小さくなっていることが確認できます。
#  ・分散は、NumPyのvar()関数で計算することができます。
print("-" * 50)
import numpy as np
# 分散をとるデータ
x_1 = np.array([60, 40, 55, 45])
x_2 = np.array([48, 49, 52, 51])
# 分散の計算
print(np.var(x_1))
print(np.var(x_2))


# ・標準偏差とは？
#  ・「標準偏差」は、分散と同じく値のばらつき具合の指標です。標準偏差 σ は、以下のように分散の平方根をとることにより求めます。
#     σ = V = 1n∑k=1n(xk−μ)2 ？？？
#  ・例えば、Aさんの体重が60kg、Bさんは40kg、Cさんは55kg、Dさんが45kgであれば、標準偏差は以下ように計算されます。
#     μ = (60+40+55+45) / 4 = 50(kg)
#     σ = ((60−50)^2+(40−50)^2+(55−50)^2+(45−50)^2) / 4 ≒ 7.91(kg)
#  ・次は、値のばらつきがより小さいケースです。
#    Aさんの体重が48kg、Bさんは49kg、Cさんは52kg、Dさんが51kgとします。
#     μ = (48+49+52+51) / 4 = 50(kg)
#     σ = ((48−50)^2+(49−50)^2+(52−50)^2+(51−50)^2) / 4 ≒ 1.58(kg)
#  ・こちらのケースの方が、標準偏差が小さくなることが確認できました。
#  ・標準偏差は単位の次元がデータと同じなので、
#    値の散らばり具合を直感的に把握する際には標準偏差が適しています。
#  ・標準偏差は、NmPyのstd( )関数を使って計算することができます。
print("-" * 50)
import numpy as np
# 標準偏差をとるデータ
x_1 = np.array([60, 40, 55, 45])
x_2 = np.array([48, 49, 52, 51])
# 標準偏差の計算
print(np.std(x_1))
print(np.std(x_2))
