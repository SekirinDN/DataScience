# Pythonの基礎1
# プログラミング言語Pythonの文法を、手を動かしながら少しずつ学んでいきましょう。
# 解説用のコードセルの下に練習用のコードセルがありますので、
#  コードを書く体験とともに進めていくことをお勧めします。
# なお、今回の解説がPythonの全てをカバーしているわけではありませんのでご注意ください。

# ・変数
#  ・変数には値を入れることができます。
#  ・以下の例では、変数aに123という値を入れています。
#  ・print(a)で、変数aに入った値を表示することができます。
print("-" * 50)
a = 123
print(a)
#  ・なお、「#」以降の記述はコメントとなり、プログラムとして認識されません。
#  ・メモなどに活用しましょう。
#  ・変数には小数の値を入れることもできます。
#  ・以下では、bに123.45という小数の値を入れています。
b = 123.45
print(b)
#  ・変数には文章を入れることもできます。
#  ・「""」または「''」 で囲まれた文章は文字列として認識され、
#    値として変数に入れることができます。
c = "こんにちは、Python！"
print(c)
#  ・変数名には、アルファベットの他に_（アンダーバー）や数字を使うこともできます。
#  ・ただし、変数名の先頭を数字にすることはできません。
dog_name = "Pochi"
print(dog_name)
number321 = 321
print(number321)
#  ・このような変数の概念は、以降Pythonを学んでいくための基盤となります。


# ・四則演算
#  ・様々な演算子を使って四則演算を行うことができます。
print("-" * 50)
a = 7
b = 3
c = a + b  # 足し算
print(f"「{a}」と「{b}」の「足し算」は、「{c}」 です。")
d = a - b  # 引き算
print(f"「{a}」と「{b}」の「引き算」は、「{d}」 です。")
e = a * b  # 掛け算
print(f"「{a}」と「{b}」の「掛け算」は、「{e}」 です。")
f = a / b  # 割り算（小数）
print(f"「{a}」と「{b}」の「割り算（小数）」は、「{f}」 です。")
g = a // b  # 割り算（整数）
print(f"「{a}」と「{b}」の「割り算（整数）」は、「{g}」 です。")
h = a % b  # 余り
print(f"「{a}」と「{b}」の「余り」は、「{h}」 です。")
#  ・上記で使用した演算子を以下にまとめます。
#     +  足し算
#     -  引き算
#     *  かける
#     /  割る（小数）
#     // 割る（整数）
#     %  余り

#  ・なお、+の演算子は文字列の結合に使うこともできます。
print("-" * 50)
a = "Hello "
b = "World!!"
c = a + b
print(c)


# ・ Bool値
#  ・変数にはTrueもしくはFalseの値を入れることができます。
#  ・これらの値は、Bool値と呼ばれます。
#  ・Bool値はTrueもしくはFalseのどちらかしかとることができません。
print("-" * 50)
a = True
b = False
print(a)
print(b)


# ・ 比較演算子
#  ・比較演算子を使うことで、値を比較した結果をBool値として得ることができます。
#  ・「>」や「<」などの比較演算子は、左右の値を比較します。
print("-" * 50)
c = 10
d = 4
e = c > d  # cがdよりも大きいかどうか
print(f"「{c}」が「{d}」よりも大きいか：{e}")
f = c < d  # cがdよりも小さいかどうか
print(f"「{c}」が「{d}」よりも小さいか：{f}")
g = c >= d  # cがd以上かどうか
print(f"「{c}」が「{d}」以上か：{g}")
h = c <= d  # cがd以下かどうか
print(f"「{c}」が「{d}」以下か：{h}")
i = c == d  # cとdが等しいかどうか
print(f"「{c}」と「{d}」が等しいか：{i}")
j = c != d  # cとdが等しくないか
print(f"「{c}」と「{d}」が等しくないか：{j}")
#  ・Pythonで使われる比較演算子を以下にまとめます。
#     <  小さい
#     >  大きい
#     <= 以上
#     >= 以下
#     == 等しい
#     != 等しくない


# ・論理演算子
#  ・論理演算子を使うと、Bool値の演算を行うことができます。
print("-" * 50)
a = 3
b = 4
c = 5
d = a < b and b < c  # 両者がTrueであればTrue
print(f"「{a}」<「{b}」and「{b}」<「{c}」：{d}")
e = a < b or b > c  # 片方がTrueであればTrue
print(f"「{a}」<「{b}」or「{b}」>「{c}」：{e}")
f = not a < b  # Bool値を反転
print(f"not「{a}」<「{b}」：{f}")
#  ・Pythonで使われる論理演算子を以下にまとめます。
#     and 両者が、Trueであれば、True
#     or  片方が、Trueであれば、True
#     not Bool値を反転
#  ・このような論理演算子を使うことで、複雑な条件をコードで表現することが可能になります。
